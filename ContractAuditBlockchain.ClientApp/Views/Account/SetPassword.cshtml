@model ResetPasswordViewModel
@{
    ViewBag.Title = Model.IsReset ? "Set password" :  "Create password";
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Change Password</title>
    @Styles.Render("~/Content/css")
</head>
<body>
    <div class="center-block">
        <div id="siteChangePassword" class="col-centered round-border no-max-width-modal">
            <section id="changePasswordHeader">
                <img src="~/Content/images/blockchain-logo.png" width="150" />
                <h4>Contract Audit Blockchain</h4>
            </section>
            <section style="padding:10px;">
                @if (!String.IsNullOrWhiteSpace(Model.ErrorMessage))
                {
                    <div class="alert alert-danger">
                        <h4>Error</h4>
                        <p>This password reset request is invalid, please request another password reset.</p>
                    </div>
                }
                else
                {
                    using (Ajax.BeginForm("SetPassword", "Account",
                            new { ReturnUrl = ViewBag.ReturnUrl },
                            new AjaxOptions { HttpMethod = "POST", OnSuccess = "ajaxSuccessChangePassword", OnBegin = "ajaxBeginChangePassword" },
                            new { @class = "form-horizontal", id = "setPasswordForm" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.UserName)
                        @Html.HiddenFor(m => m.PasswordResetKey)
                        
                    <h4>Please enter a new password</h4>
                    <div class="alert loginalert alert-danger" style="display: none;">
                        <h4>Error</h4>
                        <p></p>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-sm-4" })
                        <div class="col-sm-8">
                            @Html.PasswordFor(model => model.Password, new { @class = "form-control", id = "password1" })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ConfirmPassword, htmlAttributes: new { @class = "control-label col-sm-4" })
                        <div class="col-sm-8">
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", id = "password2" })
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12">
                            <input type="submit" value="Submit" id="submitButton" data-loading-text="Setting password..." class="btn btn-primary pull-right" />
                        </div>
                    </div>
                }
            }
            </section>
        </div>
    </div>
</body>
</html>
